image: docker:latest

stages:
  - build
  - deploy

variables:
  TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  LOGIN: "-var username=gitlab-ci-token -var password=$CI_JOB_TOKEN -var registry=$CI_REGISTRY"
  ARGS: "-var ssh_key_id=$SSH_KEY_ID -var token=$DO_TOKEN -var image=$CI_REGISTRY_IMAGE:latest"

cache:
  paths:
    - ~/tf_tmp

services:
  - name: docker:dind
    alias: docker_dind

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

build:
  stage: build
  script:
    - apk add --no-cache nodejs npm
    - npm install && npm run build
    - docker build -t $TEST_IMAGE .
    - docker run -d -p 8080:80 $TEST_IMAGE
    - apk add --no-cache curl
    - chmod +x ./smoke-tests.sh
    - ./smoke-tests.sh
    - docker tag $TEST_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE

deploy:
  stage: deploy
  script:
    - MANIFESTS=$(pwd)/manifests
    - apk update && apk add --no-cache terraform
    - mkdir -p ~/.ssh ~/tf_tmp && chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - cd ~/tf_tmp
    - terraform init -from-module=$MANIFESTS $ARGS $LOGIN
    - terraform apply -auto-approve $ARGS $LOGIN

stop:
  stage: deploy
  script:
    - apk update && apk add --no-cache terraform
    - cd ~/tf_tmp
    - terraform destroy -force $ARGS $LOGIN
  environment:
    name: haven-fe
    action: stop
  when: manual
